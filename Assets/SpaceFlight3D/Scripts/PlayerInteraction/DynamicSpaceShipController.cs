using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class DynamicSpaceShipController : EnginesController
{
    Rigidbody rb;

    public float maxForceDown = 1;
    public float powerRiseup = 10;

    SpaceShipEngine Engine => engines[0];

    float forceDown;

    protected override void Start()
    {
        base.Start();
        rb = GetComponent<Rigidbody>();
    }

    protected override void Update()
    {
        base.Update();
        if (InputHandler.Instance == null) return;

        forceDown = InputHandler.Instance.Downwards;
        Debug.DrawRay(transform.position, Vector3.down * forceDown, Color.red);


        //AdjustEnginesPower();
    }

    private void FixedUpdate()
    {
        // Need to refactor this force to be generated by an engine
        rb.AddForce(Vector3.down * forceDown * maxForceDown * rb.mass);
    }

    private void AdjustEnginesPower()
    {
        Vector3 playerUp = transform.up;
        Vector3 velocity = rb.velocity;
        if(Vector3.Dot(playerUp, velocity) < 0)
        {
            Engine.MaxPower = maxPower + powerRiseup * rb.velocity.magnitude;
        }
        else
        {
            Engine.MaxPower = maxPower;
        }
    }
}
